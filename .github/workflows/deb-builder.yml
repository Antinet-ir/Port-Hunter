name: Build and Release Debian Package

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-deb:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Install packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y devscripts build-essential lintian debhelper

      - name: Download latest GitHub release of AntiNet
        run: |
          LATEST_URL=$(curl -s https://api.github.com/repos/Antinet-ir/Port-Hunter/releases/latest | grep "browser_download_url" | grep ".deb" | cut -d '"' -f 4)
          if [ -n "$LATEST_URL" ]; then
            echo "[*] Downloading latest release: $LATEST_URL"
            wget "$LATEST_URL" -O previous_antinet.deb
            mkdir -p extracted_prev
            dpkg-deb -x previous_antinet.deb extracted_prev
          else
            echo "[*] No previous .deb found. Skipping."
          fi

      - name: Prepare new version source structure
        run: |
          mkdir -p antinet/usr/bin
          cp antinet.sh antinet/usr/bin/antinet
          chmod +x antinet/usr/bin/antinet

          mkdir -p antinet/DEBIAN
          cat <<EOF > antinet/DEBIAN/control
          Package: antinet
          Version: 1.0.1
          Section: utils
          Priority: optional
          Architecture: all
          Maintainer: Hossein Masihi <hossein.masihi@gmail.com>
          Depends: bash, nmap, masscan
          Description: AntiNet - Bash script for network scanning and reconnaissance
           AntiNet automates scanning with masscan and nmap across CIDRs and organizes output.
          EOF

          echo "[*] Optional: Add new file to release"
          echo "This is a README add-on for v1.0.1" > antinet/usr/bin/README_added.txt

      - name: Build the .deb package manually
        run: |
          dpkg-deb --build antinet

      - name: Rename and move .deb
        run: |
          mv antinet.deb antinet_1.0.1_all.deb

      - name: Upload .deb as GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: antinet-1.0.1-deb
          path: antinet_1.0.1_all.deb

      - name: Upload .deb to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: antinet_1.0.1_all.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
